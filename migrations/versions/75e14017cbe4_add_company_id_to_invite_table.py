"""Add company_id to invite table

Revision ID: 75e14017cbe4
Revises: c8a96011bae1
Create Date: 2024-11-24 18:30:46.596675

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "75e14017cbe4"
down_revision: Union[str, None] = "c8a96011bae1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Step 1: Add the column as nullable
    with op.batch_alter_table("invite", schema=None) as batch_op:
        batch_op.add_column(sa.Column("company_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, "companies", ["company_id"], ["id"])

    # Step 2: Ensure a default company exists
    op.execute(
        """
        INSERT INTO companies (id, name)
        VALUES (1, 'Default Company')
        ON CONFLICT (id) DO NOTHING;
    """
    )

    # Step 3: Populate the column with the default value
    op.execute("UPDATE invite SET company_id = 1")

    # Step 4: Make the column non-nullable
    with op.batch_alter_table("invite", schema=None) as batch_op:
        batch_op.alter_column("company_id", nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("invite", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("company_id")

    # ### end Alembic commands ###
